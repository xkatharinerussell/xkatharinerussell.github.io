{"version":3,"sources":["logo.svg","components/Home.js","components/Resume.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Home","bgImage","bgPos","bgRepeat","p","align","fontSize","fontWeight","bgGradient","bgClip","pt","alignItems","spacing","as","href","icon","isRound","size","Array","apply","map","x","i","id","title","text","Links","NavLink","props","px","py","rounded","_hover","textDecoration","bg","useColorModeValue","ReactLink","to","address","children","Nav","useDisclosure","isOpen","onOpen","onClose","useColorMode","colorMode","toggleColorMode","isDark","w","h","justifyContent","aria-label","display","md","onClick","base","link","pb","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.83283a2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { Box, VStack, HStack, IconButton, Text } from '@chakra-ui/react';\nimport { FaSun, FaMoon, FaEnvelope, FaGithub, FaLinkedinIn } from 'react-icons/fa';\nimport { Image } from \"@chakra-ui/react\"\n\nexport default function Home() {\n    return (\n        <VStack bgImage=\"url('https://unsplash.com/photos/aHZ0MPJv5Ac/1600x900')\" bgPos=\"center\" bgRepeat=\"no-repeat\">\n            <Box p={40}>\n                <Text align=\"center\" fontSize=\"8xl\" fontWeight=\"bold\" bgGradient=\"linear(to-r, purple.600, pink.600, orange.400)\" bgClip='text' >Hi I'm Katharine, a software engineer in Sydney.</Text>\n            </Box>\n\n            <HStack pt={10} alignItems={'center'} spacing={10} >\n                <IconButton as=\"a\" href=\"https://github.com/xkatharinerussell\" icon={<FaEnvelope />} isRound=\"true\" size=\"lg\" ></IconButton>\n                <IconButton as=\"a\" href=\"https://github.com/xkatharinerussell\" icon={<FaGithub />} isRound=\"true\" size=\"lg\"></IconButton>\n                <IconButton as=\"a\" href=\"https://www.linkedin.com/in/xkatharinerussell/\" icon={<FaLinkedinIn />} isRound=\"true\" size=\"lg\"></IconButton>\n            </HStack>\n        </VStack>\n    );\n}","import {\n    Box,\n    Container,\n    Heading,\n    SimpleGrid,\n    Icon,\n    Text,\n    Stack,\n    HStack,\n    VStack,\n    StackDivider\n  } from '@chakra-ui/react';\n\n  import { FaCarrot } from 'react-icons/fa';\n//   import { CheckIcon } from '@chakra-ui/icons';\n  \n  // Replace test data with your own\n  const features = Array.apply(null, Array(2)).map(function (x, i) {\n    return {\n      id: i,\n      title: 'Lorem ipsum dolor sit amet',\n      text: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam.',\n    };\n  });\n  \n  export default function Resume() {\n    return (\n      <Box p={4}>\n        <Stack spacing={4} as={Container} maxW={'5xl'} textAlign={'center'}>\n          <Text bgGradient=\"linear(to-r, purple.600, pink.600, orange.400)\" bgClip='text' fontSize={'5xl'}>Dev Experience</Text>\n          <Text color={'gray.600'} fontSize={'xl'}>\n            I'm a software engineer who is passionate about building quality products and solving problems. Learning new technologies and working with uncertainty is part of my typical day.\n          </Text>\n        </Stack>\n\n        <SimpleGrid pt={10} columns={2} spacing={5}>\n            <Box bg=\"tomato\" height=\"100px\">\n                <Text>Job 1</Text>\n            </Box>\n            <Box bg=\"tomato\" height=\"80px\"></Box>\n            <Box bg=\"tomato\" height=\"80px\"></Box>\n            <Box bg=\"tomato\" height=\"80px\"></Box>\n            <Box bg=\"tomato\" height=\"80px\"></Box>\n        </SimpleGrid>\n\n        {/* {features.map((feature) => (\n        <VStack key={feature.id} divider={<StackDivider borderColor=\"gray.200\" />}>\n\n            <Text fontWeight={600}>{feature.title}</Text>\n            <Text color={'gray.600'}>{feature.text}</Text>\n        </VStack>\n        ))} */}\n  \n        {/* <Container maxW={'6xl'} mt={10}>\n          <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={10}>\n            {features.map((feature) => (\n              <HStack key={feature.id} align={'top'}>\n                <Box color={'orange.400'} px={2}>\n                  <Icon as={FaCarrot} />\n                </Box>\n                <VStack align={'start'}>\n                  <Text fontWeight={600}>{feature.title}</Text>\n                  <Text color={'gray.600'}>{feature.text}</Text>\n                </VStack>\n              </HStack>\n            ))}\n          </SimpleGrid>\n        </Container> */}\n      </Box>\n    );\n  }","import { ReactNode } from 'react';\n\nimport {\n  Box,\n  Flex,\n  HStack,\n  Link,\n  IconButton,\n  useDisclosure,\n  useColorModeValue,\n  useColorMode,\n  Stack,\n} from '@chakra-ui/react';\n\nimport { Link as ReactLink } from \"react-router-dom\";\nimport { FaAlignJustify, FaTimes, FaSun, FaMoon } from 'react-icons/fa';\n\nconst Links = [['Home', '/dev-profile/'], ['About', '#'], ['Resume',\"/dev-profile/resume\"]];\n\nconst NavLink = (props) => (\n  <Link\n    px={2}\n    py={1}\n    rounded={'md'}\n    fontSize=\"1.3em\"\n    fontWeight=\"bold\"\n    _hover={{\n      textDecoration: 'none',\n      bg: useColorModeValue('gray.200', 'gray.700'),\n    }}\n    as={ReactLink}\n    to={props.address}>\n    {props.children}\n  </Link>\n);\n\nfunction Nav() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  // Darkmode\n  const { colorMode, toggleColorMode } = useColorMode();\n  const isDark = colorMode === \"dark\";\n\n  return (\n    <>\n      <Box bg={useColorModeValue('gray.50', 'gray.900')} w=\"100%\" px={4}>\n        <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\n          <IconButton\n            size={'md'}\n            icon={isOpen ? <FaTimes /> : <FaAlignJustify />}\n            aria-label={'Open Menu'}\n            display={{ md: 'none' }}\n            onClick={isOpen ? onClose : onOpen}\n          />\n          <HStack spacing={8} alignItems={'center'}>\n            <HStack\n              as={'nav'}\n              spacing={6}\n              display={{ base: 'none', md: 'flex' }}>\n              {Links.map((link) => (\n                <NavLink key={link[0]} address={link[1]}>{link[0]}</NavLink>\n              ))}\n            </HStack>\n            <IconButton icon={isDark?<FaSun />:<FaMoon />} isRound=\"true\" onClick={toggleColorMode}></IconButton>\n          </HStack>\n        </Flex>\n\n        {isOpen ? (\n          <Box pb={4} display={{ md: 'none' }}>\n            <Stack as={'nav'} spacing={4}>\n              {Links.map((link) => (\n                <NavLink key={link[0]} address={link[1]}>{link[0]}</NavLink>\n              ))}\n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n\n    </>\n  );\n}\n\nexport default Nav;","import logo from './logo.svg';\nimport './App.css';\nimport { Box, Menu, VStack, HStack, Flex, Heading, IconButton, useColorMode, Spacer, Text } from '@chakra-ui/react';\nimport { FaSun, FaMoon, FaEnvelope, FaGithub, FaLinkedinIn } from 'react-icons/fa';\n\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Home from './components/Home';\nimport Resume from './components/Resume';\nimport Nav from './components/Nav';\n\nfunction App() {\n\n  // const { colorMode, toggleColorMode } = useColorMode();\n  // const isDark = colorMode === \"dark\";\n\n  return (\n    \n    <VStack>\n      <Nav></Nav>\n      <Switch>\n        <Route path=\"/dev-profile/\" component={Home} exact>\n        </Route>\n        {/* <Route path=\"/dev-profile/resume\" component={Resume} exact>\n        </Route> */}\n      </Switch>\n    </VStack>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode=\"light\"></ColorModeScript>\n      <BrowserRouter>\n        <App /> \n      </BrowserRouter>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}